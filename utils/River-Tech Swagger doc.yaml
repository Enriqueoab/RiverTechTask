openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:3000
    description: Generated server url
paths:
  /player/register:
    post:
      tags:
        - Player
      summary: Register a new player
      operationId: registerPlayer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationForm'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Player'
        '400':
          description: Invalid request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Player'
        '404':
          description: Not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Player'
  /bet:
    post:
      tags:
        - Bet
      summary: Place a bet
      operationId: placeBet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BetForm'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          description: Invalid request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Game'
        '404':
          description: Not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Game'
  /walletHistory:
    get:
      tags:
        - WalletHistory
      summary: Retrieve all the wallet transactions made.
      operationId: retrieveBetResults
      parameters:
        - name: userName
          in: query
          required: true
          schema:
            type: string
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageWalletHistory'
        '400':
          description: Invalid request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageWalletHistory'
        '404':
          description: Not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageWalletHistory'
  /player/leaderBoard:
    get:
      tags:
        - Player
      summary: Retrieve players leader board
      operationId: getLeaderBoard
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeaderboardProjection'
        '400':
          description: Invalid request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeaderboardProjection'
        '404':
          description: Not found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeaderboardProjection'
  /game/{gameId}:
    get:
      tags:
        - Game
      summary: Execute game
      operationId: executeGame
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          description: Invalid request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Game'
        '404':
          description: Not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Game'
  /betHistory:
    get:
      tags:
        - Bet History
      summary: Retrieve all the bet operations made by a player.
      operationId: retrieveBetResults_1
      parameters:
        - name: betHistoryForm
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/BetHistoryForm'
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: Successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBetHistory'
        '400':
          description: Invalid request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBetHistory'
        '404':
          description: Not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBetHistory'
components:
  schemas:
    RegistrationForm:
      required:
        - name
        - surname
        - userName
      type: object
      properties:
        name:
          maxLength: 10
          minLength: 2
          type: string
        surname:
          maxLength: 10
          minLength: 2
          type: string
        userName:
          maxLength: 12
          minLength: 5
          type: string
      description: Form for a player registration
    Player:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        surname:
          type: string
        userName:
          type: string
        wallet:
          $ref: '#/components/schemas/Wallet'
      description: User of the bet application
    Wallet:
      type: object
      properties:
        id:
          type: integer
          format: int64
        balance:
          type: integer
          description: Credit amount available
          format: int64
      description: Player balance holder to bet with
    BetForm:
      required:
        - betAmount
        - betNum
        - gameId
        - playerUserName
      type: object
      properties:
        playerUserName:
          maxLength: 12
          minLength: 3
          type: string
        betNum:
          type: integer
          format: int32
        gameId:
          type: integer
          format: int64
        betAmount:
          type: integer
          format: int64
      description: Form to place a bet
    Game:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        executedAt:
          type: string
          description: Time when the game was played
          format: date-time
        gameResult:
          type: integer
          format: int32
      description: Game to bet on
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    PageWalletHistory:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/WalletHistory'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        paged:
          type: boolean
        unpaged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
    SortObject:
      type: object
      properties:
        unsorted:
          type: boolean
        sorted:
          type: boolean
        empty:
          type: boolean
    WalletHistory:
      type: object
      properties:
        id:
          type: integer
          format: int32
        balanceBeforeTransaction:
          type: integer
          format: int64
        balanceAfterTransaction:
          type: integer
          format: int64
        transactionType:
          type: string
      description: Record of the wallet in and out transactions
    BetProjection:
      type: object
      properties:
        wonAmount:
          type: integer
          format: int64
    LeaderboardProjection:
      type: object
      properties:
        bets:
          type: array
          items:
            $ref: '#/components/schemas/BetProjection'
        userName:
          type: string
        name:
          type: string
    BetHistoryForm:
      required:
        - playerUserName
      type: object
      properties:
        playerUserName:
          maxLength: 12
          minLength: 3
          type: string
        justExecutedBets:
          type: boolean
          description: Filter to retrieve just the bets linked to games already played
          nullable: true
      description: Form to retrieve a player bets
    BetHistory:
      type: object
      properties:
        id:
          type: integer
          format: int64
        player:
          $ref: '#/components/schemas/Player'
        betNum:
          type: integer
          format: int32
        gameResult:
          type: integer
          format: int32
        playerUserName:
          type: string
        placedAt:
          type: string
          description: The time the bet was made
          format: date-time
        executedAt:
          type: string
          description: Time when the game for the bet was played
          format: date-time
          nullable: true
        betResultMessage:
          type: string
          description: >-
            Bet result, calculated by how close the bet against the game result
            was
          nullable: true
          example: SECOND_PRICE
          enum:
            - FIRST_PRICE
            - SECOND_PRICE
            - THIRD_PRICE
            - LOST
      description: Records about the bets, from creation to result
    PageBetHistory:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/BetHistory'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
